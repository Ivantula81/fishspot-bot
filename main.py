from aiogram import Bot, Dispatcher, types
from aiogram.types import Message, CallbackQuery, FSInputFile
from aiogram.enums import ParseMode
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.filters import CommandStart
import asyncio

BOT_TOKEN = "8055314263:AAF4gB8dO5hTZeIhXYMeHAbLrY0cY50Q_ag"

bot = Bot(token=BOT_TOKEN, parse_mode=ParseMode.HTML)
dp = Dispatcher(storage=MemoryStorage())

def main_menu_kb():
    kb = InlineKeyboardBuilder()
    kb.button(text="üõí –ö—É–ø–∏—Ç—å", url="https://t.me/ikrabeogradbot/shop")
    kb.button(text="üìÑ –ü—Ä–∞–π—Å", callback_data="price")
    kb.button(text="üë§ –ú–µ–Ω–µ–¥–∂–µ—Ä", url="https://t.me/Nata_beo")
    kb.button(text="üöö –î–æ—Å—Ç–∞–≤–∫–∞", callback_data="delivery")
    kb.button(text="üë• –ì—Ä—É–ø–ø–∞", url="https://t.me/+6EbDpQhrRCI3NTc0")
    kb.button(text="üì∏ Instagram", url="https://www.instagram.com/fishspot.bg/")
    kb.adjust(3, 3)
    return kb.as_markup()

@dp.message(CommandStart())
async def start(message: Message):
    photo = FSInputFile("–Ω–µ—Ä–∫–∞.jpg")
    caption = """
<b>üêø –î–∏–∫–∞—è –∫—Ä–∞—Å–Ω–∞—è —Ä—ã–±–∞ ‚Äì —Å–≤–µ–∂–µ–º–æ—Ä–æ–∂–µ–Ω–∞—è, —Ü–µ–ª–∞—è, –ø–æ—Ç—Ä–æ—à—ë–Ω–Ω–∞—è, –±–µ–∑ –≥–æ–ª–æ–≤—ã!</b>

üî• –ü—Ä—è–º–æ —Å –ö–∞–º—á–∞—Ç–∫–∏ ‚Äì 100% –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç!

<b>–í –Ω–∞–ª–∏—á–∏–∏:</b>
‚úÖ –ù–µ—Ä–∫–∞ ‚Äì –Ω–∞—Å—ã—â–µ–Ω–Ω—ã–π –≤–∫—É—Å, –±–æ–≥–∞—Ç—ã–π –û–º–µ–≥–∞-3
‚úÖ –ö–∏–∂—É—á ‚Äì —Å–æ—á–Ω–∞—è –∏ –∞—Ä–æ–º–∞—Ç–Ω–∞—è, –æ—Ç–ª–∏—á–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –∑–∞–ø–µ–∫–∞–Ω–∏—è, –∑–∞—Å–æ–ª–∫–∏ –∏ –∫–æ–ø—á–µ–Ω–∏—è
‚úÖ –ö–µ—Ç–∞ ‚Äì –¥–∏–µ—Ç–∏—á–µ—Å–∫–∞—è, —Å –ø–ª–æ—Ç–Ω–æ–π —Ç–µ–∫—Å—Ç—É—Ä–æ–π –∏ –º—è–≥–∫–∏–º –≤–∫—É—Å–æ–º
‚úÖ –ì–æ—Ä–±—É—à–∞ ‚Äì –Ω–µ–∂–Ω–∞—è –∏ –ª—ë–≥–∫–∞—è, —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –¥–ª—è –ª—é–±—ã—Ö –±–ª—é–¥

üêü –°–≤–µ–∂–µ–º–æ—Ä–æ–∂–µ–Ω–∞—è, —Ü–µ–ª–∞—è, –ø–æ—Ç—Ä–æ—à—ë–Ω–Ω–∞—è, –±–µ–∑ –≥–æ–ª–æ–≤—ã ‚Äì —É–¥–æ–±–Ω–æ –¥–ª—è –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è!

üåø –ë–µ–∑ –¥–æ–±–∞–≤–æ–∫ –∏ –∫–æ–Ω—Å–µ—Ä–≤–∞–Ω—Ç–æ–≤ ‚Äì —Ç–æ–ª—å–∫–æ –¥–∏–∫–∞—è —Ä—ã–±–∞ –≤—ã—Å—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞.
üöõ –î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –ë–µ–ª–≥—Ä–∞–¥—É –∏ –ù–æ–≤–∏-–°–∞–¥—É.
"""
    await message.answer_photo(photo=photo, caption=caption, reply_markup=main_menu_kb())

@dp.message(lambda message: message.text != "/start")
async def fallback(message: Message):
    await message.answer(
        """
ü§ñ <b>–Ø –µ—â—ë –Ω–µ –Ω–∞—É—á–∏–ª—Å—è —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞—Ç—å —Å –ª—é–¥—å–º–∏ (–Ω–æ –æ—á–µ–Ω—å —Å—Ç–∞—Ä–∞—é—Å—å!)</b>

–ß—Ç–æ–±—ã –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å ‚Äî –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b>üë§ –ú–µ–Ω–µ–¥–∂–µ—Ä</b> –Ω–∏–∂–µ ‚¨áÔ∏è
–ê –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç –∏–ª–∏ –ø—Ä–∞–π—Å ‚Äî –æ–Ω–∏ —Ç–æ–∂–µ –ø–æ–¥ —Ä—É–∫–æ–π!
""",
        reply_markup=main_menu_kb()
    )

@dp.callback_query(lambda c: c.data == "price")
async def send_price(callback_query: CallbackQuery):
    await callback_query.message.answer("""
üç£ <b>–ò–∫—Ä–∞:</b>
üîπ –ò–∫—Ä–∞ –≥–æ—Ä–±—É—à–∏
‚ñ™Ô∏è 250 –≥ ‚Äì 5 500 RSD
‚ñ™Ô∏è 500 –≥ ‚Äì 11 000 RSD

üîπ –ò–∫—Ä–∞ –∫–µ—Ç—ã
‚ñ™Ô∏è 250 –≥ ‚Äì 6 000 RSD
‚ñ™Ô∏è 500 –≥ ‚Äì 12 000 RSD

üî• <b>–ö–æ–ø—á–µ–Ω–∞—è —Ä—ã–±–∞:</b>
üêü –ù–µ—Ä–∫–∞ —Ö/–∫ –ø–ª–∞—Å—Ç ‚Äì 5 000 RSD/kg
üêü –ö–∏–∂—É—á —Ö/–∫ –ø–ª–∞—Å—Ç ‚Äì 4 500 RSD/kg
üêü –°–∫—É–º–±—Ä–∏—è —Ö/–∫ ‚Äì 2 700 RSD/kg
üêü –§–æ—Ä–µ–ª—å —Ö/–∫ (–ø–∞—Å—Ç—Ä–æ–º–∫–∞) ‚Äì 2 700 RSD/kg
üêü –ë–∞–ª—ã–∫ —Ñ–æ—Ä–µ–ª–∏ —Å–ª–∞–±–æ—Å–æ–ª–µ–Ω–Ω—ã–π ‚Äì 3 500 RSD/kg
üêü –§–∏–ª–µ —Å–µ–ª—å–¥–∏ —Ç–∏—Ö–æ–æ–∫–µ–∞–Ω—Å–∫–æ–π ‚Äì 1 500 RSD/kg

ü¶ê <b>–ú–æ—Ä–µ–ø—Ä–æ–¥—É–∫—Ç—ã:</b>
ü¶ê –õ–∞–Ω–≥—É—Å—Ç–∏–Ω—ã Vannamei ‚Äì 2 500 RSD/kg

‚ùÑÔ∏è <b>–°–≤–µ–∂–µ–º–æ—Ä–æ–∂–µ–Ω–∞—è —Ä—ã–±–∞ (–ö–∞–º—á–∞—Ç–∫–∞):</b>
üêü –ì–æ—Ä–±—É—à–∞ –¥–∏–∫–∞—è ‚Äì 1 500 RSD/kg
üêü –ö–µ—Ç–∞ –¥–∏–∫–∞—è ‚Äì 1 900 RSD/kg
üêü –ö–∏–∂—É—á –¥–∏–∫–∏–π ‚Äì 2 400 RSD/kg

ü•© <b>–°—Ç–µ–π–∫–∏:</b>
ü•© –°—Ç–µ–π–∫–∏ –¥–∏–∫–æ–π –Ω–µ—Ä–∫–∏ ‚Äì 4 200 RSD/kg
ü•© –°—Ç–µ–π–∫–∏ –¥–∏–∫–æ–π –∫–µ—Ç—ã ‚Äì 2 300 RSD/kg
ü•© –°—Ç–µ–π–∫–∏ –¥–∏–∫–æ–≥–æ –∫–∏–∂—É—á–∞ ‚Äì 2 900 RSD/kg

üêü <b>–î–∏–∫–∞—è –∫—Ä–∞—Å–Ω–∞—è —Ä—ã–±–∞ ‚Äì —Å–≤–µ–∂–µ–º–æ—Ä–æ–∂–µ–Ω–∞—è, —Ü–µ–ª–∞—è, –ø–æ—Ç—Ä–æ—à—ë–Ω–Ω–∞—è, –±–µ–∑ –≥–æ–ª–æ–≤—ã!</b>

üî• –ü—Ä—è–º–æ —Å –ö–∞–º—á–∞—Ç–∫–∏ ‚Äì 100% –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç!

‚úÖ –ù–µ—Ä–∫–∞ ‚Äì –Ω–∞—Å—ã—â–µ–Ω–Ω—ã–π –≤–∫—É—Å, –±–æ–≥–∞—Ç—ã–π –û–º–µ–≥–∞-3
‚úÖ –ö–∏–∂—É—á ‚Äì —Å–æ—á–Ω–∞—è –∏ –∞—Ä–æ–º–∞—Ç–Ω–∞—è, –æ—Ç–ª–∏—á–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –∑–∞–ø–µ–∫–∞–Ω–∏—è, –∑–∞—Å–æ–ª–∫–∏ –∏ –∫–æ–ø—á–µ–Ω–∏—è
‚úÖ –ö–µ—Ç–∞ ‚Äì –¥–∏–µ—Ç–∏—á–µ—Å–∫–∞—è, —Å –ø–ª–æ—Ç–Ω–æ–π —Ç–µ–∫—Å—Ç—É—Ä–æ–π –∏ –º—è–≥–∫–∏–º –≤–∫—É—Å–æ–º
‚úÖ –ì–æ—Ä–±—É—à–∞ ‚Äì –Ω–µ–∂–Ω–∞—è –∏ –ª—ë–≥–∫–∞—è, —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –¥–ª—è –ª—é–±—ã—Ö –±–ª—é–¥

üåø –ë–µ–∑ –¥–æ–±–∞–≤–æ–∫ –∏ –∫–æ–Ω—Å–µ—Ä–≤–∞–Ω—Ç–æ–≤ ‚Äì —Ç–æ–ª—å–∫–æ –¥–∏–∫–∞—è —Ä—ã–±–∞ –≤—ã—Å—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞.
üöõ –î–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –ë–µ–ª–≥—Ä–∞–¥—É –∏ –ù–æ–≤–∏-–°–∞–¥—É.
""", reply_markup=main_menu_kb())
    await callback_query.answer()

@dp.callback_query(lambda c: c.data == "delivery")
async def send_delivery_info(callback_query: CallbackQuery):
    await callback_query.message.answer(
        """
üöö <b>–£—Å–ª–æ–≤–∏—è –¥–æ—Å—Ç–∞–≤–∫–∏</b>

üì¢ –ù–æ–≤–∏–Ω–∫–∞! –¢–µ–ø–µ—Ä—å –¥–æ—Å—Ç–∞–≤–ª—è–µ–º –Ω–µ —Ç–æ–ª—å–∫–æ –ø–æ –ë–µ–ª–≥—Ä–∞–¥—É, –Ω–æ –∏ –≤ –ù–æ–≤–∏-–°–∞–¥ (–∏ –¥—Ä—É–≥–∏–µ –≥–æ—Ä–æ–¥–∞ –°–µ—Ä–±–∏–∏ –ø–æ –¥–æ–≥–æ–≤–æ—Ä—ë–Ω–Ω–æ—Å—Ç–∏).

üî∏ –ü–æ –ë–µ–ª–≥—Ä–∞–¥—É:
–î–æ—Å—Ç–∞–≤–∫–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å —Å 17:00 –¥–æ 21:00 (–∫—Ä–æ–º–µ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å—è)

üî∏ –í –ù–æ–≤–∏-–°–∞–¥:
–î–æ—Å—Ç–∞–≤–∫–∞ ‚Äî –∫–∞–∂–¥—ã–π —á–µ—Ç–≤–µ—Ä–≥

‚úÖ –î–æ—Å—Ç–∞–≤–∫–∞ <b>–±–µ—Å–ø–ª–∞—Ç–Ω–∞—è</b> ‚Äî –≤—ã –ø–ª–∞—Ç–∏—Ç–µ —Ç–æ–ª—å–∫–æ –∑–∞ –ø—Ä–æ–¥—É–∫—Ç. 
–ú—ã —Å–∞–º–∏ –ø—Ä–∏–≤–æ–∑–∏–º ‚Äî –≤ —Ç–µ—Ä–º–æ—É–ø–∞–∫–æ–≤–∫–µ, –±–µ–∑ –ø–æ—Å—Ä–µ–¥–Ω–∏–∫–æ–≤.
""", reply_markup=main_menu_kb())
    await callback_query.answer()

@dp.callback_query(lambda c: c.data == "back")
async def go_back(callback_query: CallbackQuery):
    await callback_query.message.answer("üìç –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é:", reply_markup=main_menu_kb())
    await callback_query.answer()

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
